{
	"info": {
		"_postman_id": "2828b89d-5d16-4ccb-83d3-ec585cfde90c",
		"name": "httpbin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "getImage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type webp is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "image/webp",
						"type": "text"
					},
					{
						"key": "Content-Length",
						"value": "10568 ",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://httpbin.org/image/webp",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"image",
						"webp"
					]
				}
			},
			"response": []
		},
		{
			"name": "basicAuthJaneJanes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"authenticated user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.authenticated).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "janes",
							"type": "string"
						},
						{
							"key": "username",
							"value": "jane",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrlHttp}}/basic-auth/jane/janes",
					"host": [
						"{{baseUrlHttp}}"
					],
					"path": [
						"basic-auth",
						"jane",
						"janes"
					]
				}
			},
			"response": []
		},
		{
			"name": "getHtml",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrlHttp}}/html",
					"host": [
						"{{baseUrlHttp}}"
					],
					"path": [
						"html"
					]
				}
			},
			"response": []
		},
		{
			"name": "getJson",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"pm.test(\"correct json data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.slideshow.author).to.eql(\"Yours Truly\");\r",
							"    pm.expect(jsonData.slideshow.slides[1].items[1]).to.eql(\"Who <em>buys</em> WonderWidgets\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrlHttp}}/json",
					"host": [
						"{{baseUrlHttp}}"
					],
					"path": [
						"json"
					]
				}
			},
			"response": []
		},
		{
			"name": "status500",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrlHttp}}/status/500",
					"host": [
						"{{baseUrlHttp}}"
					],
					"path": [
						"status",
						"500"
					]
				}
			},
			"response": []
		},
		{
			"name": "status300",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 300\", function () {\r",
							"    pm.response.to.have.status(300);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrlHttp}}/status/300",
					"host": [
						"{{baseUrlHttp}}"
					],
					"path": [
						"status",
						"300"
					]
				}
			},
			"response": []
		},
		{
			"name": "post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 2s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"correct url\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.url).to.eql(\"https://httpbin.org/post\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrlHttp}}/post",
					"host": [
						"{{baseUrlHttp}}"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		}
	]
}